	-> angsd version: 0.937 (htslib: 1.15) build(Mar  3 2022 00:51:08)
	-> angsd -bam bam_teosinte_list.txt -doMaf 1 -doMajorMinor 1 -uniqueOnly 1 -minMapQ 30 -minQ 20 -minInd 5 -doSaf 1 -anc chr1.fasta -GL 2 -out teosinte -P 4 
	-> Inputtype is BAM/CRAM
[multiReader] 5 samples in 5 input files
	-> Reading fasta: chr1.fasta
	-> Parsing 5 number of samples 
PROBS at: 1:1-100000	8828
PROBS at: 1:1-100000	24306
PROBS at: 1:1-100000	24816
PROBS at: 1:1-100000	25337
PROBS at: 1:1-100000	25866
PROBS at: 1:1-100000	26192
PROBS at: 1:1-100000	26357
PROBS at: 1:1-100000	26644
PROBS at: 1:1-100000	27071
PROBS at: 1:1-100000	27099
PROBS at: 1:1-100000	27124
	-> Printing at chr: 1:1-100000 pos:31790 chunknumber 100 contains 964 sites
PROBS at: 1:1-100000	40896
PROBS at: 1:1-100000	48295
PROBS at: 1:1-100000	48324
PROBS at: 1:1-100000	48836
PROBS at: 1:1-100000	50609
PROBS at: 1:1-100000	51102
PROBS at: 1:1-100000	51156
PROBS at: 1:1-100000	52008
PROBS at: 1:1-100000	52040
PROBS at: 1:1-100000	52561
PROBS at: 1:1-100000	52691
PROBS at: 1:1-100000	52782
PROBS at: 1:1-100000	52875
PROBS at: 1:1-100000	53301

	-> Allocated ~ 10 million nodes to the nodepool, this is not an estimate of the memory usage
PROBS at: 1:1-100000	53616
PROBS at: 1:1-100000	54006
PROBS at: 1:1-100000	54162
PROBS at: 1:1-100000	55224
PROBS at: 1:1-100000	55525
PROBS at: 1:1-100000	55644
PROBS at: 1:1-100000	55806
PROBS at: 1:1-100000	56046
PROBS at: 1:1-100000	56835
PROBS at: 1:1-100000	57354
PROBS at: 1:1-100000	57376
PROBS at: 1:1-100000	57508
PROBS at: 1:1-100000	57564
PROBS at: 1:1-100000	57841
PROBS at: 1:1-100000	58252
PROBS at: 1:1-100000	58270
PROBS at: 1:1-100000	58458
PROBS at: 1:1-100000	58633
PROBS at: 1:1-100000	58750
PROBS at: 1:1-100000	58780
PROBS at: 1:1-100000	58927
PROBS at: 1:1-100000	58933
PROBS at: 1:1-100000	59305
PROBS at: 1:1-100000	59314
PROBS at: 1:1-100000	59757
PROBS at: 1:1-100000	60288
PROBS at: 1:1-100000	60418
PROBS at: 1:1-100000	60487
PROBS at: 1:1-100000	60580
PROBS at: 1:1-100000	60700
PROBS at: 1:1-100000	60815
PROBS at: 1:1-100000	61143
PROBS at: 1:1-100000	61468
PROBS at: 1:1-100000	61507
PROBS at: 1:1-100000	61834
PROBS at: 1:1-100000	61839

	-> Allocated ~ 20 million nodes to the nodepool, this is not an estimate of the memory usage
PROBS at: 1:1-100000	61960
PROBS at: 1:1-100000	62185
PROBS at: 1:1-100000	62327
PROBS at: 1:1-100000	63311
PROBS at: 1:1-100000	63656
PROBS at: 1:1-100000	63824
PROBS at: 1:1-100000	64076
PROBS at: 1:1-100000	64085
PROBS at: 1:1-100000	64283
PROBS at: 1:1-100000	64315
PROBS at: 1:1-100000	64469
PROBS at: 1:1-100000	65135
PROBS at: 1:1-100000	65531
PROBS at: 1:1-100000	65801
PROBS at: 1:1-100000	65858
PROBS at: 1:1-100000	66082
PROBS at: 1:1-100000	66111
PROBS at: 1:1-100000	66489
PROBS at: 1:1-100000	66672
PROBS at: 1:1-100000	66674
	-> Printing at chr: 1:1-100000 pos:66974 chunknumber 200 contains 251 sites
PROBS at: 1:1-100000	66997
PROBS at: 1:1-100000	67263
PROBS at: 1:1-100000	67299
PROBS at: 1:1-100000	67758
PROBS at: 1:1-100000	68126
PROBS at: 1:1-100000	68193
PROBS at: 1:1-100000	68514
PROBS at: 1:1-100000	68718
PROBS at: 1:1-100000	68864
PROBS at: 1:1-100000	68979
PROBS at: 1:1-100000	69307
PROBS at: 1:1-100000	69893
PROBS at: 1:1-100000	69979
PROBS at: 1:1-100000	70105
PROBS at: 1:1-100000	70625
PROBS at: 1:1-100000	71447
PROBS at: 1:1-100000	79464
PROBS at: 1:1-100000	82547
PROBS at: 1:1-100000	92753
PROBS at: 1:1-100000	95264
	-> Printing at chr: 1:1-100000 pos:96531 chunknumber 300 contains 251 sites

	-> Done reading data waiting for calculations to finish
	-> Done waiting for threads
	-> Output filenames:
		->"teosinte.arg"
		->"teosinte.mafs.gz"
		->"teosinte.saf.gz"
		->"teosinte.saf.pos.gz"
		->"teosinte.saf.idx"
	-> Mon May  5 10:32:15 2025
	-> Arguments and parameters for all analysis are located in .arg file
	-> Total number of sites analyzed: 99960
	-> Number of sites retained after filtering: 90246 
	[ALL done] cpu-time used =  226.66 sec
	[ALL done] walltime used =  176.00 sec
	-> angsd version: 0.937 (htslib: 1.15) build(Mar  3 2022 00:51:08)
	-> angsd -bam bam_landrace_list.txt -doMaf 1 -doMajorMinor 1 -uniqueOnly 1 -minMapQ 30 -minQ 20 -minInd 5 -doSaf 1 -anc chr1.fasta -GL 2 -out landrace -P 4 
	-> Inputtype is BAM/CRAM
[multiReader] 5 samples in 5 input files
	-> Reading fasta: chr1.fasta
	-> Parsing 5 number of samples 
PROBS at: 1:1-100000	6363
PROBS at: 1:1-100000	14524
PROBS at: 1:1-100000	24816
PROBS at: 1:1-100000	25337
PROBS at: 1:1-100000	25866
PROBS at: 1:1-100000	26357
PROBS at: 1:1-100000	26644
PROBS at: 1:1-100000	27071
PROBS at: 1:1-100000	27099
PROBS at: 1:1-100000	27124
	-> Printing at chr: 1:1-100000 pos:35245 chunknumber 100 contains 2582 sites
PROBS at: 1:1-100000	40896
PROBS at: 1:1-100000	41115
PROBS at: 1:1-100000	48295
PROBS at: 1:1-100000	48324
PROBS at: 1:1-100000	48836
PROBS at: 1:1-100000	50609
PROBS at: 1:1-100000	51102
PROBS at: 1:1-100000	51156
PROBS at: 1:1-100000	52008
PROBS at: 1:1-100000	52040
PROBS at: 1:1-100000	52561
PROBS at: 1:1-100000	52691
PROBS at: 1:1-100000	52782
PROBS at: 1:1-100000	52875
PROBS at: 1:1-100000	53301
PROBS at: 1:1-100000	53760
PROBS at: 1:1-100000	53784
PROBS at: 1:1-100000	54006
PROBS at: 1:1-100000	54162
PROBS at: 1:1-100000	55525
PROBS at: 1:1-100000	55644
PROBS at: 1:1-100000	55806
PROBS at: 1:1-100000	56046
PROBS at: 1:1-100000	56835
PROBS at: 1:1-100000	57191
PROBS at: 1:1-100000	57354
PROBS at: 1:1-100000	57376
PROBS at: 1:1-100000	57508
PROBS at: 1:1-100000	57564
PROBS at: 1:1-100000	57631
PROBS at: 1:1-100000	57841
PROBS at: 1:1-100000	58252
PROBS at: 1:1-100000	58270
PROBS at: 1:1-100000	58450
PROBS at: 1:1-100000	58458
PROBS at: 1:1-100000	58633
PROBS at: 1:1-100000	58750
PROBS at: 1:1-100000	58780
PROBS at: 1:1-100000	58927
PROBS at: 1:1-100000	58933
PROBS at: 1:1-100000	59305
PROBS at: 1:1-100000	59314

	-> Allocated ~ 10 million nodes to the nodepool, this is not an estimate of the memory usage
PROBS at: 1:1-100000	59757
PROBS at: 1:1-100000	60173
PROBS at: 1:1-100000	60288
PROBS at: 1:1-100000	60418
PROBS at: 1:1-100000	60487
PROBS at: 1:1-100000	60700
PROBS at: 1:1-100000	60815
PROBS at: 1:1-100000	61143
PROBS at: 1:1-100000	61468
PROBS at: 1:1-100000	61834
PROBS at: 1:1-100000	61960

	-> Allocated ~ 20 million nodes to the nodepool, this is not an estimate of the memory usage
PROBS at: 1:1-100000	62185
PROBS at: 1:1-100000	62327
PROBS at: 1:1-100000	63311
PROBS at: 1:1-100000	63656
PROBS at: 1:1-100000	63824
PROBS at: 1:1-100000	64076
PROBS at: 1:1-100000	64085
PROBS at: 1:1-100000	64283
PROBS at: 1:1-100000	64315
PROBS at: 1:1-100000	64469
PROBS at: 1:1-100000	64593
PROBS at: 1:1-100000	65216
PROBS at: 1:1-100000	65438
PROBS at: 1:1-100000	65531
PROBS at: 1:1-100000	65801
PROBS at: 1:1-100000	65858
PROBS at: 1:1-100000	66082
PROBS at: 1:1-100000	66489
PROBS at: 1:1-100000	66672
PROBS at: 1:1-100000	66674
PROBS at: 1:1-100000	66774
PROBS at: 1:1-100000	66997
PROBS at: 1:1-100000	67263
PROBS at: 1:1-100000	67699
PROBS at: 1:1-100000	67758
PROBS at: 1:1-100000	68126
PROBS at: 1:1-100000	68160
PROBS at: 1:1-100000	68193
PROBS at: 1:1-100000	68514
PROBS at: 1:1-100000	68718
PROBS at: 1:1-100000	68864
	-> Printing at chr: 1:1-100000 pos:69464 chunknumber 200 contains 256 sites
PROBS at: 1:1-100000	69979
PROBS at: 1:1-100000	70105
PROBS at: 1:1-100000	71447
PROBS at: 1:1-100000	79464
PROBS at: 1:1-100000	82547
PROBS at: 1:1-100000	90327
PROBS at: 1:1-100000	92753
PROBS at: 1:1-100000	95264

	-> Done reading data waiting for calculations to finish
	-> Done waiting for threads
	-> Output filenames:
		->"landrace.arg"
		->"landrace.mafs.gz"
		->"landrace.saf.gz"
		->"landrace.saf.pos.gz"
		->"landrace.saf.idx"
	-> Mon May  5 10:35:01 2025
	-> Arguments and parameters for all analysis are located in .arg file
	-> Total number of sites analyzed: 99972
	-> Number of sites retained after filtering: 83010 
	[ALL done] cpu-time used =  211.81 sec
	[ALL done] walltime used =  166.00 sec
	-> Version of fname:teosinte.saf.idx is:2
	-> Assuming .saf.gz file: teosinte.saf.gz
	-> Assuming .saf.pos.gz: teosinte.saf.pos.gz
	-> args: tole:0.000000 nthreads:4 maxiter:100 nsites:0 start:(null) chr:(null) start:-1 stop:-1 fstout:(null) oldout:0 seed:-1 bootstrap:0 resample_chr:0 whichFst:0 fold:0 ref:(null) anc:(null)
	-> generating offset remapper lookup
	-> isSame:1 adjusting foldfactors
	-> nSites: 90145
	-> The choice of -nSites will require atleast: 4.470387 megabyte memory, that is at least: 0.00% of total memory
	-> dim(teosinte.saf.idx):11
	-> Dimension of parameter space: 11
	-> Done reading data from chromosome will prepare next chromosome
	-> Is in multi sfs, will now read data from chr:1:1-100000
	-> hello Im the master merge part of realSFS. and I'll now do a tripple bypass to find intersect 
	-> 1) Will set iter according to chooseChr and start and stop, and possibly using -sites
	-> Will run optimization on nSites: 90145
------------
startlik=-211841.326003
lik[2]=-46156.016363 diff=1.656853e+05 alpha:1.000000 sr2:6.393709e-01 nsites_difference[0]: 7.980731e+04
lik[5]=-46112.131455 diff=4.388491e+01 alpha:1.256060 sr2:2.431295e-05 nsites_difference[1]: 4.370184e+02
lik[8]=-46112.127458 diff=3.997423e-03 alpha:1.560702 sr2:8.466528e-10 nsites_difference[1]: 2.805465e+00
lik[11]=-46112.127458 diff=7.780181e-08 alpha:1.410077 sr2:1.515781e-14 nsites_difference[1]: 1.007844e-02
	-> New like is worse? new:-4.611213e+04 old:-4.611213e+04 diff:-9.145879e-09 will skip accelerated EM in this round
lik[13]=-46112.127458 diff=1.901935e-08 alpha:1.619321 sr2:1.988051e-18 nsites_difference[3]: 1.088626e-04
lik[15]=-46112.127458 diff=1.241278e-08 alpha:1.000000 sr2:5.724882e-20 nsites_difference[2]: 2.080947e-05
	-> Breaking EM(sr2) at iter:16, sqrt(sr2):4.329197e-11
likelihood: -46112.127458
------------
	-> Only read nSites: 0 will therefore prepare next chromosome (or exit)

	-> NB NB output is no longer log probs of the frequency spectrum!
	-> Output is now simply the expected values! 
	-> You can convert to the old format simply with log(norm(x))

	-> Please check that it has converged!
	-> You can add start new optimization by supplying -sfs FILE, where is >FILE from this run
	-> -maxIter INT -tole FLOAT
	-> Version of fname:landrace.saf.idx is:2
	-> Assuming .saf.gz file: landrace.saf.gz
	-> Assuming .saf.pos.gz: landrace.saf.pos.gz
	-> args: tole:0.000000 nthreads:4 maxiter:100 nsites:0 start:(null) chr:(null) start:-1 stop:-1 fstout:(null) oldout:0 seed:-1 bootstrap:0 resample_chr:0 whichFst:0 fold:0 ref:(null) anc:(null)
	-> generating offset remapper lookup
	-> isSame:1 adjusting foldfactors
	-> nSites: 82908
	-> The choice of -nSites will require atleast: 4.111496 megabyte memory, that is at least: 0.00% of total memory
	-> dim(landrace.saf.idx):11
	-> Dimension of parameter space: 11
	-> Done reading data from chromosome will prepare next chromosome
	-> Is in multi sfs, will now read data from chr:1:1-100000
	-> hello Im the master merge part of realSFS. and I'll now do a tripple bypass to find intersect 
	-> 1) Will set iter according to chooseChr and start and stop, and possibly using -sites
	-> Will run optimization on nSites: 82908
------------
startlik=-194311.308040
lik[2]=-44003.505763 diff=1.503078e+05 alpha:1.000000 sr2:6.274415e-01 nsites_difference[0]: 7.296694e+04
lik[5]=-43958.717291 diff=4.478847e+01 alpha:1.258379 sr2:2.722674e-05 nsites_difference[1]: 4.170132e+02
lik[8]=-43958.713157 diff=4.134711e-03 alpha:1.563075 sr2:9.561336e-10 nsites_difference[1]: 2.921954e+00
lik[11]=-43958.713157 diff=1.221197e-07 alpha:1.499362 sr2:2.344821e-14 nsites_difference[1]: 1.129844e-02
lik[14]=-43958.713157 diff=8.512870e-10 alpha:1.500409 sr2:2.757108e-18 nsites_difference[3]: 1.346262e-04
	-> Breaking EM(sr2) at iter:15, sqrt(sr2):1.898950e-11
likelihood: -43958.713157
------------
	-> Only read nSites: 0 will therefore prepare next chromosome (or exit)

	-> NB NB output is no longer log probs of the frequency spectrum!
	-> Output is now simply the expected values! 
	-> You can convert to the old format simply with log(norm(x))

	-> Please check that it has converged!
	-> You can add start new optimization by supplying -sfs FILE, where is >FILE from this run
	-> -maxIter INT -tole FLOAT
	-> Version of fname:teosinte.saf.idx is:2
	-> Assuming .saf.gz file: teosinte.saf.gz
	-> Assuming .saf.pos.gz: teosinte.saf.pos.gz
	-> args: tole:0.000000 nthreads:4 maxiter:100 nsites:0 start:teosinte.sfs chr:(null) start:-1 stop:-1 fstout:teosinte oldout:0 seed:-1 bootstrap:0 resample_chr:0 whichFst:0 fold:1 ref:(null) anc:(null)
	-> Will read chunks of size: 4096
	-> Reading: teosinte.sfs assuming counts (will normalize to probs internally)
	-> nChr:10
	-> Done reading data from chromosome will prepare next chromosome
	-> Is in multi sfs, will now read data from chr:1:1-100000
	-> hello Im the master merge part of realSFS. and I'll now do a tripple bypass to find intersect 
	-> 1) Will set iter according to chooseChr and start and stop, and possibly using -sites
	-> Only read nSites: 0 will therefore prepare next chromosome (or exit)
	-> Done reading data from chromosome will prepare next chromosome
	-> Writing 90145 sites for chr:1:1-100000
	-> Output filenames:
		->"teosinte.thetas.gz"
		->"teosinte.thetas.idx"
	-> Version of fname:landrace.saf.idx is:2
	-> Assuming .saf.gz file: landrace.saf.gz
	-> Assuming .saf.pos.gz: landrace.saf.pos.gz
	-> args: tole:0.000000 nthreads:4 maxiter:100 nsites:0 start:landrace.sfs chr:(null) start:-1 stop:-1 fstout:landrace oldout:0 seed:-1 bootstrap:0 resample_chr:0 whichFst:0 fold:1 ref:(null) anc:(null)
	-> Will read chunks of size: 4096
	-> Reading: landrace.sfs assuming counts (will normalize to probs internally)
	-> nChr:10
	-> Done reading data from chromosome will prepare next chromosome
	-> Is in multi sfs, will now read data from chr:1:1-100000
	-> hello Im the master merge part of realSFS. and I'll now do a tripple bypass to find intersect 
	-> 1) Will set iter according to chooseChr and start and stop, and possibly using -sites
	-> Only read nSites: 0 will therefore prepare next chromosome (or exit)
	-> Done reading data from chromosome will prepare next chromosome
	-> Writing 82908 sites for chr:1:1-100000
	-> Output filenames:
		->"landrace.thetas.gz"
		->"landrace.thetas.idx"
 thetaStat do_stat teosinte.thetas.idx -win 5000 -step 1000 -outnames teosinte.thetasWindow5kb_1kb
	Assuming binfile:teosinte.thetas.gz and indexfile:teosinte.thetas.idx
		Information from index file:
		0	1:1-100000	90145	8	10
	 -r=(null) outnames=teosinte.thetasWindow5kb_1kb step: 1000 win: 5000
	pc.chr=1:1-100000 pc.nSites=90145 firstpos=9 lastpos=99879
	Dumping file: "teosinte.thetasWindow5kb_1kb.pestPG"
 thetaStat do_stat landrace.thetas.idx -win 5000 -step 1000 -outnames landrace.thetasWindow5kb_1kb
	Assuming binfile:landrace.thetas.gz and indexfile:landrace.thetas.idx
		Information from index file:
		0	1:1-100000	82908	8	10
	 -r=(null) outnames=landrace.thetasWindow5kb_1kb step: 1000 win: 5000
	pc.chr=1:1-100000 pc.nSites=82908 firstpos=9 lastpos=99898
	Dumping file: "landrace.thetasWindow5kb_1kb.pestPG"
